{"mappings":"AAAA,MAAMA,EAAiBC,SAASC,eAAe,mBACzCC,EAAcF,SAASG,cAAc,gBACrCC,EAAcJ,SAASG,cAAc,eACrCE,EAAeL,SAASG,cAAc,gBACtCG,EAAiBN,SAASG,cAAc,kBACxCI,EAAiBP,SAASG,cAAc,kBAE9C,IAAIK,EAEJ,SAASC,EAAmBC,EAAMC,EAAOC,EAASC,GAChDT,EAAYU,YAAcC,OAAOL,GAAMM,SAAS,EAAG,KACnDX,EAAaS,YAAcC,OAAOJ,GAAOK,SAAS,EAAG,KACrDV,EAAeQ,YAAcC,OAAOH,GAASI,SAAS,EAAG,KACzDT,EAAeO,YAAcC,OAAOF,GAASG,SAAS,EAAG,I,CAuB3Dd,EAAYe,iBAAiB,SAAS,MApBtC,WACE,MAAMC,EAAa,IAAIC,KAAKpB,EAAeqB,OAAOC,UAElDb,EAAoBc,aAAY,KAC9B,MAAMC,GAAM,IAAIJ,MAAOE,UACjBG,EAAWN,EAAaK,EAE1BC,EAAW,GACbC,cAAcjB,GACdC,EAAmB,EAAG,EAAG,EAAG,IAM5BA,EAJaiB,KAAKC,MAAMH,EAAY,OACtBE,KAAKC,MAAMH,EAAa,MAAyB,MAC/CE,KAAKC,MAAMH,EAAa,KAAoB,KAC5CE,KAAKC,MAAMH,EAAa,IAAc,K,GAGvD,I,CAIHI,EAAgB","sources":["src/js/02-timer.js"],"sourcesContent":["const datetimePicker = document.getElementById('datetime-picker');\nconst startButton = document.querySelector('[data-start]');\nconst daysElement = document.querySelector('[data-days]');\nconst hoursElement = document.querySelector('[data-hours]');\nconst minutesElement = document.querySelector('[data-minutes]');\nconst secondsElement = document.querySelector('[data-seconds]');\n\nlet countdownInterval;\n\nfunction updateTimerDisplay(days, hours, minutes, seconds) {\n  daysElement.textContent = String(days).padStart(2, '0');\n  hoursElement.textContent = String(hours).padStart(2, '0');\n  minutesElement.textContent = String(minutes).padStart(2, '0');\n  secondsElement.textContent = String(seconds).padStart(2, '0');\n}\n\nfunction startCountdown() {\n  const targetDate = new Date(datetimePicker.value).getTime();\n\n  countdownInterval = setInterval(() => {\n    const now = new Date().getTime();\n    const distance = targetDate - now;\n\n    if (distance < 0) {\n      clearInterval(countdownInterval);\n      updateTimerDisplay(0, 0, 0, 0);\n    } else {\n      const days = Math.floor(distance / (1000 * 60 * 60 * 24));\n      const hours = Math.floor((distance % (1000 * 60 * 60 * 24)) / (1000 * 60 * 60));\n      const minutes = Math.floor((distance % (1000 * 60 * 60)) / (1000 * 60));\n      const seconds = Math.floor((distance % (1000 * 60)) / 1000);\n      updateTimerDisplay(days, hours, minutes, seconds);\n    }\n  }, 1000);\n}\n\nstartButton.addEventListener('click', () => {\n  startCountdown();\n});\n"],"names":["$40d383fb392a7037$var$datetimePicker","document","getElementById","$40d383fb392a7037$var$startButton","querySelector","$40d383fb392a7037$var$daysElement","$40d383fb392a7037$var$hoursElement","$40d383fb392a7037$var$minutesElement","$40d383fb392a7037$var$secondsElement","$40d383fb392a7037$var$countdownInterval","$40d383fb392a7037$var$updateTimerDisplay","days","hours","minutes","seconds","textContent","String","padStart","addEventListener","targetDate","Date","value","getTime","setInterval","now","distance","clearInterval","Math","floor","$40d383fb392a7037$var$startCountdown"],"version":3,"file":"02-timer.c2319f6d.js.map"}